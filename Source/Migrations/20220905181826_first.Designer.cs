// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMWebApi.Context;

#nullable disable

namespace SMWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220905181826_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SosWebApi.Models.Building", b =>
                {
                    b.Property<long>("build_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("build_id"), 1L, 1);

                    b.Property<DateTime>("build_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("build_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("settle_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("build_id");

                    b.HasIndex("settle_id");

                    b.HasIndex("user_id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("SosWebApi.Models.Debt", b =>
                {
                    b.Property<long>("debt_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("debt_id"), 1L, 1);

                    b.Property<long?>("debtFlatIdflat_id")
                        .HasColumnType("bigint");

                    b.Property<long>("debt_amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("debt_duedate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("debt_iscompleted")
                        .HasColumnType("bit");

                    b.Property<string>("debt_type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("debt_id");

                    b.HasIndex("debtFlatIdflat_id");

                    b.ToTable("Debts");
                });

            modelBuilder.Entity("SosWebApi.Models.Flat", b =>
                {
                    b.Property<long>("flat_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("flat_id"), 1L, 1);

                    b.Property<long>("build_id")
                        .HasColumnType("bigint");

                    b.Property<string>("flat_desc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("flat_number")
                        .HasColumnType("int");

                    b.HasKey("flat_id");

                    b.HasIndex("build_id");

                    b.ToTable("Flats");
                });

            modelBuilder.Entity("SosWebApi.Models.FlatUser", b =>
                {
                    b.Property<long>("rel_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("rel_id"), 1L, 1);

                    b.Property<long?>("flat_id")
                        .HasColumnType("bigint");

                    b.Property<bool>("isOwner")
                        .HasColumnType("bit");

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("rel_id");

                    b.HasIndex("flat_id");

                    b.HasIndex("user_id");

                    b.ToTable("FlatUsers");
                });

            modelBuilder.Entity("SosWebApi.Models.Request", b =>
                {
                    b.Property<long>("req_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("req_id"), 1L, 1);

                    b.Property<DateTime>("req_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("req_desc")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("req_isCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("req_title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("settle_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("req_id");

                    b.HasIndex("settle_id");

                    b.HasIndex("user_id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("SosWebApi.Models.Session", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("SessionToken")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ipAddress")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("session_expiretime")
                        .HasColumnType("datetime2");

                    b.Property<long>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("user_id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("SosWebApi.Models.Settlement", b =>
                {
                    b.Property<long>("settle_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("settle_id"), 1L, 1);

                    b.Property<string>("settle_bankIban")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("settle_bankName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("settle_city")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("settle_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("settle_email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("settle_name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("settle_phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("settle_province")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("settle_id");

                    b.HasIndex("user_id");

                    b.ToTable("Settlements");
                });

            modelBuilder.Entity("SosWebApi.Models.User", b =>
                {
                    b.Property<long>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("user_id"), 1L, 1);

                    b.Property<string>("user_confirmationCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("user_confirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("user_created")
                        .HasColumnType("datetime2");

                    b.Property<string>("user_email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("user_isActive")
                        .HasColumnType("bit");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("user_password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("user_phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("user_surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SosWebApi.Models.Building", b =>
                {
                    b.HasOne("SosWebApi.Models.Settlement", "buildSettle")
                        .WithMany("settleBuildings")
                        .HasForeignKey("settle_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SosWebApi.Models.User", "buildManager")
                        .WithMany("buildManagers")
                        .HasForeignKey("user_id");

                    b.Navigation("buildManager");

                    b.Navigation("buildSettle");
                });

            modelBuilder.Entity("SosWebApi.Models.Debt", b =>
                {
                    b.HasOne("SosWebApi.Models.Flat", "debtFlatId")
                        .WithMany("flatDepts")
                        .HasForeignKey("debtFlatIdflat_id");

                    b.Navigation("debtFlatId");
                });

            modelBuilder.Entity("SosWebApi.Models.Flat", b =>
                {
                    b.HasOne("SosWebApi.Models.Building", "flatBuildId")
                        .WithMany("buildFlats")
                        .HasForeignKey("build_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("flatBuildId");
                });

            modelBuilder.Entity("SosWebApi.Models.FlatUser", b =>
                {
                    b.HasOne("SosWebApi.Models.Flat", "flat")
                        .WithMany("flatUsers")
                        .HasForeignKey("flat_id");

                    b.HasOne("SosWebApi.Models.User", "user")
                        .WithMany("flatUsers")
                        .HasForeignKey("user_id");

                    b.Navigation("flat");

                    b.Navigation("user");
                });

            modelBuilder.Entity("SosWebApi.Models.Request", b =>
                {
                    b.HasOne("SosWebApi.Models.Settlement", "req_dstSettle")
                        .WithMany("settleRequests")
                        .HasForeignKey("settle_id");

                    b.HasOne("SosWebApi.Models.User", "req_srcUser")
                        .WithMany("userRequests")
                        .HasForeignKey("user_id");

                    b.Navigation("req_dstSettle");

                    b.Navigation("req_srcUser");
                });

            modelBuilder.Entity("SosWebApi.Models.Session", b =>
                {
                    b.HasOne("SosWebApi.Models.User", "sessionUser")
                        .WithMany("sessions")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sessionUser");
                });

            modelBuilder.Entity("SosWebApi.Models.Settlement", b =>
                {
                    b.HasOne("SosWebApi.Models.User", "settleManager")
                        .WithMany("settleManagers")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("settleManager");
                });

            modelBuilder.Entity("SosWebApi.Models.Building", b =>
                {
                    b.Navigation("buildFlats");
                });

            modelBuilder.Entity("SosWebApi.Models.Flat", b =>
                {
                    b.Navigation("flatDepts");

                    b.Navigation("flatUsers");
                });

            modelBuilder.Entity("SosWebApi.Models.Settlement", b =>
                {
                    b.Navigation("settleBuildings");

                    b.Navigation("settleRequests");
                });

            modelBuilder.Entity("SosWebApi.Models.User", b =>
                {
                    b.Navigation("buildManagers");

                    b.Navigation("flatUsers");

                    b.Navigation("sessions");

                    b.Navigation("settleManagers");

                    b.Navigation("userRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
